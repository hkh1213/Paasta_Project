<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.IUserInfoMapper">
   <!-- 회원 가입하기 (회원정보 등록하기) -->
   <insert id="InsertUserInfo" parameterType="UserInfoDTO">
      INSERT INTO USER_INFO(
      USER_NO,
      PASSWORD,
      USER_NAME,
      EMAIL,
      SEX,
      USER_AN,
      RANDOM,
      MY_CONTENT,
      REG_ID,
      CHG_ID,
      REG_DT,
      CHG_DT
      )
      VALUES(
      USER_SEQ.NEXTVAL,
      #{password},
      #{user_name},
      #{email},
      #{sex},
      #{user_an},
      #{random},
      '상태글을 입력하세요.',
      #{user_name},
      #{user_name},
      SYSDATE,
      SYSDATE
      )
   </insert>
   <!-- 이메일로 회원가입 중복 체크 -->
  <select id="getUserExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
      SELECT DECODE(COUNT(1), 0, 'N','Y') AS EXISTS_YN
      FROM USER_INFO
      WHERE EMAIL = #{email}
   </select>
   <!-- 렌덤 값 업데이트 쿼리 -->
   <update id="updateRan" parameterType="UserInfoDTO">
      UPDATE USER_INFO
      SET
      RANDOM = #{random}
      WHERE
      EMAIL = #{email}
   </update>
   <!--랜덤 값으로 유저 정보 가져오는 쿼리 -->
   <select id="getUserEmail" resultType="UserInfoDTO" parameterType="UserInfoDTO">
      SELECT
      EMAIL
      FROM
      USER_INFO
      WHERE
      RANDOM = #{random}
   </select>
   <!-- 비밀번호 재설정 -->
   <update id="doChangePw" parameterType="UserInfoDTO">
      UPDATE USER_INFO
      SET
      CHG_ID = #{email},
      PASSWORD = #{password},
      CHG_DT = SYSDATE
      WHERE
      RANDOM = #{random}
   </update>
   <!-- 회원정보 수정 -->
   <update id="updateUserInfo" parameterType="UserInfoDTO">
      UPDATE USER_INFO
      SET
      CHG_ID = #{email},
      PASSWORD = #{password},
      CHG_DT = SYSDATE,
      USER_AN = #{user_an},
      USER_NAME = #{user_name}
      WHERE
      EMAIL = #{email}
   </update>
    <!--01010101-->
   <select id="confirmEmail" parameterType="UserInfoDTO" resultType="UserInfoDTO">
      SELECT DECODE(COUNT(1), 0, 'N','Y') AS EXISTS_YN
      FROM
      USER_INFO
      WHERE EMAIL = #{email}
   </select>
</mapper>