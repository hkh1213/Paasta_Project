package P1;

import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;

import java.io.BufferedReader;
import java.io.IOException;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

public class getApi {
	public static void main(String[] args)throws Exception {
		getApi a=new getApi();
		a.apirun();
	}
	public void apirun() throws Exception {
		String apiUrl = "http://apis.data.go.kr/1470000/FoodNtrIrdntInfoService/getFoodNtrItdntList"; /* URL */
		String serviceKey="oJzWRxx8UMJkHJcJ8Gk3SSpFJqUekWl4dfIZ0lu5iYvk1v6fJATJ8GlTmFtwqWpjL7Mt%2B7hnvhUriX5QDIdBrw%3D%3D";
		StringBuilder urlBuilder = new StringBuilder(apiUrl);

		urlBuilder.append("?" + URLEncoder.encode("ServiceKey", "UTF-8")+"="+serviceKey);
		urlBuilder.append(
				"&" + URLEncoder.encode("desc_kor", "UTF-8") + "=" + URLEncoder.encode("바나나칩", "UTF-8")); /* 식품이름 */
		urlBuilder
				.append("&" + URLEncoder.encode("pageNo", "UTF-8") + "=" + URLEncoder.encode("1", "UTF-8")); /* 페이지번호 */
		urlBuilder.append(
				"&" + URLEncoder.encode("numOfRows", "UTF-8") + "=" + URLEncoder.encode("3", "UTF-8")); /* 한 페이지 결과 수 */
		urlBuilder.append(
				"&" + URLEncoder.encode("bgn_year", "UTF-8") + "=" + URLEncoder.encode("2017", "UTF-8")); /* 구축년도 */
		urlBuilder.append("&" + URLEncoder.encode("animal_plant", "UTF-8") + "="
				+ URLEncoder.encode("(유)돌코리아", "UTF-8")); /* 가공업체 */
		
		URL url = new URL(urlBuilder.toString());
		System.out.println("URL :"+url);

		HttpURLConnection conn = (HttpURLConnection) url.openConnection();
		conn.setRequestMethod("GET");
		conn.setRequestProperty("Content-type", "application/json");
		System.out.println("Response code: " + conn.getResponseCode());
		
		BufferedReader rd;
		if (conn.getResponseCode() >= 200 && conn.getResponseCode() <= 300) {
			rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
		} else {
			rd = new BufferedReader(new InputStreamReader(conn.getErrorStream()));
		}
		StringBuilder sb = new StringBuilder();
		String line;
		while ((line = rd.readLine()) != null) {
			sb.append(line);
		}
		rd.close();
		conn.disconnect();
		System.out.println("sb :"+sb);

		String result = sb.toString();
		System.out.println("Result :"+result);

		JSONParser parser = new JSONParser();
		JSONObject obj = (JSONObject) parser.parse(result);
		JSONObject parse_response = (JSONObject) obj.get("response");
		JSONObject parse_body = (JSONObject) parse_response.get("body");
		JSONObject parse_items = (JSONObject) parse_body.get("items");
		JSONArray parse_item = (JSONArray) parse_items.get("item");
		try {

			for (int i = 0; i < parse_item.size(); i++) {
				JSONObject row = (JSONObject) parse_item.get(i);
				String name = (String) row.get("DESC_KOR");
				System.out.println("foodname : " + name);

			}
			for (int i = 0; i < parse_item.size(); i++) {
				JSONObject row = (JSONObject) parse_item.get(i);
				String gram = (String) row.get("SERVING_WT");
				System.out.println("foodgram : " + gram);

			}
			for (int i = 0; i < parse_item.size(); i++) {
				JSONObject row = (JSONObject) parse_item.get(i);
				String cal = (String) row.get("NUTR_CONT1");
				System.out.println("calories : " + cal);

			}

		} catch (Exception e) {
			e.printStackTrace();
		}

	}
}
